#!/usr/bin/env ruby

# frozen_string_literal: true

require "reinbow"
require "pathname"
require "shellwords"

using Reinbow

HERE = Pathname.pwd
ORIGINAL_DIR = HERE / "original"

abort ":: Leaftover original folder found".red.to_s \
    if HERE.glob( "./**/original" ).any?( &:directory? )

abort %(:: "#{ORIGINAL_DIR}" already exists).red.to_s \
    if ORIGINAL_DIR.exist?

puts ":: ORIGINAL_DIR is #{ORIGINAL_DIR}".blue


INPUTS = HERE.glob( "*" ).filter( &:directory? )

ORIGINAL_DIR.mkpath

puts ":: Compress input directories".yellow

INPUTS.each do |input|

    puts %(:: Process "#{input.relative_path_from HERE}").blue

    if not input.directory?
        puts ":: Not a directory, skip".blue
        next
    end

    puts ":: Compress directory".blue

    archive = "#{input.basename}.7z"

    system <<~CMD or abort ":: Failed to compress".red.to_s
        command ,7z-pack #{input.to_path.shellescape} #{archive.shellescape}
    CMD

    puts ":: Archive original dir".blue

    system <<~CMD or abort ":: Failed to archive".red.to_s
        command mv -t #{ORIGINAL_DIR.to_path.shellescape} #{input.to_path.shellescape}
    CMD

    puts ""

end


puts ":: p2archive compressed".yellow

HERE.glob( "*.{7z,tar}" ).each do |archive|

    puts ":: p2archive #{archive}".blue

    archive_basename_no_ext = archive.basename ".*"

    containing_dir = HERE / archive_basename_no_ext
    containing_dir.mkpath

    system "mv -t #{containing_dir.to_path.shellescape} #{archive.to_path.shellescape}" \
        or abort ":: Failed to move archive".red.to_s

    Dir.chdir( containing_dir ) do
        system "command par2create -r3 -n3 *" \
            or abort ":: Failed to par2create".red

        puts ":: Checksum"

        system "sha256sum --binary * | tee > checksum.txt" \
            or abort ":: Failed to sha256sum".red
    end

end

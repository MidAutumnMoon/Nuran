name: "Build Packages & NixOS"

on:
    workflow_dispatch:
    push:
        paths:
        - 'flake.*'
        - 'packages/**'
        - "machine/**"
        - "nixos/**"
        - "home/**"
    schedule:
        #- cron: "0 */4 * * *"
        - cron: "0 0 */2 * *"

env:
    CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}

jobs:

    all_subjects:
        name: Get Subjects to Build
        runs-on: ubuntu-latest
        defaults:
            run: { shell: bash }
        outputs:
            subjects: ${{ steps.get_subjects.outputs.subjects }}
        steps:
        -   name: Checkout
            uses: actions/checkout@v4

        -   name: Setup nix
            uses: ./.github/actions/nix-pieces
            with: { cachix_token: '${{ secrets.CACHIX_AUTH_TOKEN }}' }

        -   name: Get subjects
            id: get_subjects
            run: |
                out=$( nix run ".#nuranScripts.build-driver" \
                    -- subjects "packages/manifest.rb" )
                echo "subjects=${out}" >> "$GITHUB_OUTPUT"

    build_packages:
        name: Build Packages
        runs-on: ubuntu-latest
        defaults:
            run: { shell: bash }
        needs:
            - all_subjects
        strategy:
            matrix:
                subject: ${{ fromJSON( needs.all_subjects.outputs.subjects ) }}
            fail-fast: false
        steps:
        -   name: Checkout
            uses: actions/checkout@v4

        -   name: Setup nix
            uses: ./.github/actions/nix-pieces
            with: { cachix_token: '${{ secrets.CACHIX_AUTH_TOKEN }}' }

        -   name: Build Subject
            run: |
                nix flake update
                nix run --print-build-logs \
                    .#nuranScripts.build-driver -- build \
                    "packages/manifest.rb" "${{ matrix.subject }}"

    build-nixos:
        name: Build NixOS
        needs:
            - build_packages
        runs-on: ubuntu-latest
        defaults:
            run: { shell: bash }
        steps:
        -   name: Checkout
            uses: actions/checkout@v4

        -   name: Setup nix
            uses: ./.github/actions/nix-pieces
            with: { cachix_token: '${{ secrets.CACHIX_AUTH_TOKEN }}' }

        -   name: Build NixOS
            run: |
                nix flake update
                nix run --print-build-logs \
                    .#nuranScripts.build-driver -- nixos

# vim: nowrap:
